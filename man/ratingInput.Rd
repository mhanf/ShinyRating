% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ratingInput.R
\name{ratingInput}
\alias{ratingInput}
\title{Create a rating input}
\usage{
ratingInput(
  inputId,
  label = NULL,
  width = "auto",
  number = 5,
  value = NA,
  cumul = FALSE,
  read_only = FALSE,
  hover = FALSE,
  i_on_color = "success",
  i_off_color = "dark",
  i_width = NULL,
  i_height = NULL,
  i_name = "star",
  i_prefer_type = "solid",
  i_lib = "fontawesome",
  i_anim = "none",
  i_duration = 2,
  i_value = 1:number,
  i_margin_left = "auto",
  i_margin_right = "auto",
  tlp = FALSE,
  tlp_position = "bottom",
  tlp_color = "black"
)
}
\arguments{
\item{inputId}{The rating input id.}

\item{label}{Display label for the control.}

\item{width}{The width of the input, e.g. '400px', or '100\%'; see validateCssUnit()}

\item{number}{The number of icons in the rating input.}

\item{value}{The Initial value.}

\item{cumul}{Logical, whether or not to use cumulative color for the icons.}

\item{read_only}{Logical, whether or not to use a read only mode for the icons.}

\item{hover}{Logical, whether or not to use a hover mode for the icons.}

\item{i_on_color, i_off_color}{The off and on icon colors (hex or Bootstrap 5 color).}

\item{i_width, i_height}{The icons width and height in css units.}

\item{i_name}{The icon name (fontawesome) or path (local).}

\item{i_prefer_type}{The type of icon returned in case of fontawesome lib, \code{"regular"} or \code{"solid"}}

\item{i_lib}{The icon library to use. Either "fontawesome" or "local".}

\item{i_anim}{The type of animations see \href{https://animate.style/}{Animate.css}.}

\item{i_duration}{The animation duration in seconds.}

\item{i_value}{The character strings to be shown as message.}

\item{i_margin_left, i_margin_right}{The length value for the margin that's either
left or right of the icon. By default, \code{"auto"} is used for both
properties. If space is needed on either side then a length of \code{"0.2em"} is
recommended as a starting point.}

\item{tlp}{Logical, whether or not to use a tooltip for the icon.}

\item{tlp_position}{The tooltip positions, \code{"top"}, \code{"right"}, \code{"bottom"}, or \code{"left"}.}

\item{tlp_color}{The tooltip colors, \code{"primary"}, \code{"secondary"}, \code{"light"}, \code{"dark"}, \code{"info"}, \code{"warning"}, \code{"danger"}, \code{"success"}, \code{"white"}, or \code{"black"}.}
}
\value{
A rating input for usage in Shiny UI.
}
\description{
Create a rating input for usage in a Shiny UI.
}
\examples{
if (interactive()) {
  library(shiny)
  library(bslib)
  library(ShinyRating)

  ui <- fluidPage(
    theme = bslib::bs_theme(version = 5, bootwatch = "flatly"),
    ratingInput(
      inputId = "id1",
      i_name = "star",
      i_on_color = "danger"
    ),
    shiny::actionButton("update", "Update")
  )
  server <- function(input, output, session) {
    shiny::observeEvent(input$update, {
      updateRatingInput(session = session, inputId = "id1", value = 4)
    })
  }
  shiny::shinyApp(ui, server)
}
}
