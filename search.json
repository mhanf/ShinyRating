[{"path":[]},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement matthieu.hanf@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://mhanf.github.io/ShinyRating/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://mhanf.github.io/ShinyRating/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ShinyRating authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mhanf.github.io/ShinyRating/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"matthieu Hanf. Author, maintainer.","code":""},{"path":"https://mhanf.github.io/ShinyRating/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanf m (2023). ShinyRating: Easy Creation Rating Inputs Shiny. https://github.com/mhanf/ShinyRating, https://mhanf.github.io/ShinyRating/.","code":"@Manual{,   title = {ShinyRating: Easy Creation Of Rating Inputs In Shiny},   author = {matthieu Hanf},   year = {2023},   note = {https://github.com/mhanf/ShinyRating, https://mhanf.github.io/ShinyRating/}, }"},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"shinyrating-","dir":"","previous_headings":"","what":"Easy Creation Of Rating Inputs In Shiny","title":"Easy Creation Of Rating Inputs In Shiny","text":"Easy creation rating inputs Shiny.","code":""},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Easy Creation Of Rating Inputs In Shiny","text":"Optimized Bootstrap 5. Possibility use fontawesome 6.1.2 icons well user-defined SVG images. Possibility use animations Animate.css Simple definition number, size (height width), type, margin (left right), color animation icons. Possibility add tooltips. Read , hover accumulation modes. Possibility define individual setting rules icons. Compatible server validation inputs based shinyvalidate package.","code":""},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy Creation Of Rating Inputs In Shiny","text":"can install development version ShinyRating GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mhanf/ShinyRating\")"},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Easy Creation Of Rating Inputs In Shiny","text":"ShinyRating exports two main functions: ratingInput() updateRatingInput(). Shiny app example using functions can created follows: can run gallery : live version available .","code":"# libraries library(shiny) library(ShinyRating) library(bslib) # ui part ui <- function(){   fluidPage(     theme = bslib::bs_theme(       version = 5,       bootswatch = \"flatly\"     ),     br(),     fluidRow(       column(         width = 12,         align = \"center\",         br(),         ratingInput(           inputId = \"mood\",           label = \"How do you feel ?\",           cumul = FALSE,           hover = TRUE,           i_on_color = c(\"danger\",\"warning\",\"dark\",\"info\",\"success\"),           i_off_color = \"light\",           i_name = c(\"face-angry\",\"face-frown\",\"face-meh\",\"face-smile\",\"face-laugh\"),           i_lib = \"fontawesome\",           i_anim = \"pulse\",           tlp = TRUE,           tlp_color = c(\"danger\",\"warning\",\"dark\",\"info\",\"success\"),           tlp_position = \"bottom\",           i_value = c(\"Angry\",\"Frown\",\"Neutral\",\"Happy\",\"Excited\")         ),         br(),         ratingInput(           inputId = \"star\",           label = \"Where is shinyRating on the fun scale ?\",           i_anim = \"tada\",           i_name = \"star\",           i_on_color = \"#D5AB55\",           cumul = TRUE,           hover = TRUE         ),         br(),         actionButton(\"reset\",\"Reset\",class=\"btn-success m-1\"),         actionButton(\"update\",\"Update\",class=\"btn-success m-1\"),         br(),         textOutput(\"rating1\"),         textOutput(\"rating2\")       )     )   ) } # Server part server <- function(input, output, session) {   observeEvent(      input$reset , {       updateRatingInput(session, \"star\")       updateRatingInput(session, \"mood\")     }   )   observeEvent(      input$update , {       updateRatingInput(session, \"star\",value = 5)       updateRatingInput(session, \"mood\", value = \"Excited\")     }   )   observe({     output$rating1 <- renderText(paste0(\"response 1: \",input$mood))     output$rating2 <- renderText(paste0(\"response 2: \",input$star))     }) } # launch the app shinyApp(ui = ui, server = server) ShinyRating::run_gallery()"},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"prior-art--philosophy","dir":"","previous_headings":"","what":"Prior art & philosophy","title":"Easy Creation Of Rating Inputs In Shiny","text":"core functionnalities package similar ShinyRatingInput. package tries overcome limitations optimized Bootstrap 5 compatible shinyverse packages developed Rstudio (mostly shinyvalidate, bslib fontawesome) well extending functionnalities (color, size, animation …). tooltip functionality inspired one bsutils package. SVG loading functionnalities strongly inspired ones icons package.idea use animate.css comes shinyanimate package.","code":""},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Easy Creation Of Rating Inputs In Shiny","text":"developer maintainer mhanf. External contributions welcome. Please keep mind professional R developer enthusiastic R data scientist plays shiny javascript pretext learn new stuffs. Unfortunately, code. Please note ShinyRating project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Easy Creation Of Rating Inputs In Shiny","text":"ShinyRating package whole licensed MIT license.animate.css library used package licensed HL3 license.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a rating input — ratingInput","title":"Create a rating input — ratingInput","text":"Create rating input usage Shiny UI.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a rating input — ratingInput","text":"","code":"ratingInput(   inputId,   label = NULL,   width = \"auto\",   number = 5,   value = NA,   cumul = FALSE,   read_only = FALSE,   hover = FALSE,   i_on_color = \"success\",   i_off_color = \"dark\",   i_width = NULL,   i_height = NULL,   i_name = \"star\",   i_prefer_type = \"solid\",   i_lib = \"fontawesome\",   i_anim = \"none\",   i_duration = 2,   i_value = 1:number,   i_margin_left = \"auto\",   i_margin_right = \"auto\",   tlp = FALSE,   tlp_position = \"bottom\",   tlp_color = \"black\" )"},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a rating input — ratingInput","text":"inputId rating input id. label Display label control. width width input, e.g. '400px', '100%'; see validateCssUnit() number number icons rating input. value Initial value. cumul Logical, whether use cumulative color icons. read_only Logical, whether use read mode icons. hover Logical, whether use hover mode icons. i_on_color, i_off_color icon colors (hex Bootstrap 5 color). i_width, i_height icons width height css units. i_name icon name (fontawesome) path (local). i_prefer_type type icon returned case fontawesome lib, \"regular\" \"solid\" i_lib icon library use. Either \"fontawesome\" \"local\". i_anim type animations see Animate.css. i_duration animation duration seconds. i_value character strings shown message. i_margin_left, i_margin_right length value margin either left right icon. default, \"auto\" used properties. space needed either side length \"0.2em\" recommended starting point. tlp Logical, whether use tooltip icon. tlp_position tooltip positions, \"top\", \"right\", \"bottom\", \"left\". tlp_color tooltip colors, \"primary\", \"secondary\", \"light\", \"dark\", \"info\", \"warning\", \"danger\", \"success\", \"white\", \"black\".","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a rating input — ratingInput","text":"rating input usage Shiny UI.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a rating input — ratingInput","text":"","code":"if (interactive()) {   library(shiny)   library(bslib)   library(ShinyRating)    ui <- fluidPage(     theme = bslib::bs_theme(version = 5, bootwatch = \"flatly\"),     ratingInput(       inputId = \"id1\",       i_name = \"star\",       i_on_color = \"danger\"     ),     shiny::actionButton(\"update\", \"Update\")   )   server <- function(input, output, session) {     shiny::observeEvent(input$update, {       updateRatingInput(session = session, inputId = \"id1\", value = 4)     })   }   shiny::shinyApp(ui, server) }"},{"path":"https://mhanf.github.io/ShinyRating/reference/run_gallery.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app: shinyRating capabilities — run_gallery","title":"Shiny app: shinyRating capabilities — run_gallery","text":"Shiny app demonstrating rating input capabilities.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/run_gallery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app: shinyRating capabilities — run_gallery","text":"","code":"run_gallery()"},{"path":"https://mhanf.github.io/ShinyRating/reference/run_gallery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app: shinyRating capabilities — run_gallery","text":"returned value, function just runs Shiny app.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the value of a rating input on the client — updateRatingInput","title":"Change the value of a rating input on the client — updateRatingInput","text":"Change value rating input client","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the value of a rating input on the client — updateRatingInput","text":"","code":"updateRatingInput(session, inputId, value = NA)"},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the value of a rating input on the client — updateRatingInput","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input. value new value assign input.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the value of a rating input on the client — updateRatingInput","text":"input updated value.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the value of a rating input on the client — updateRatingInput","text":"","code":"if (interactive()) {   library(shiny)   library(bslib)   library(ShinyRating)    ui <- fluidPage(     theme = bslib::bs_theme(version = 5, bootwatch = \"flatly\"),     ratingInput(       inputId = \"id1\",       i_name = \"star\",       i_on_color = \"danger\"     ),     shiny::actionButton(\"update\", \"Update\")   )   server <- function(input, output, session) {     shiny::observeEvent(input$update, {       updateRatingInput(session = session, inputId = \"id1\", value = 4)     })   }   shiny::shinyApp(ui, server) }"},{"path":"https://mhanf.github.io/ShinyRating/news/index.html","id":"shinyrating-001","dir":"Changelog","previous_headings":"","what":"ShinyRating 0.0.1","title":"ShinyRating 0.0.1","text":"Initial release.","code":""}]
