[{"path":"https://mhanf.github.io/ShinyRating/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ShinyRating authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mhanf.github.io/ShinyRating/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"matthieu Hanf. Author, maintainer.","code":""},{"path":"https://mhanf.github.io/ShinyRating/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hanf m (2022). ShinyRating: Easy Creation Rating Inputs Shiny. https://github.com/mhanf/ShinyRating, https://mhanf.github.io/ShinyRating/.","code":"@Manual{,   title = {ShinyRating: Easy Creation Of Rating Inputs In Shiny},   author = {matthieu Hanf},   year = {2022},   note = {https://github.com/mhanf/ShinyRating, https://mhanf.github.io/ShinyRating/}, }"},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"shinyrating","dir":"","previous_headings":"","what":"Easy Creation Of Rating Inputs In Shiny","title":"Easy Creation Of Rating Inputs In Shiny","text":"Easy creation rating inputs Shiny.","code":""},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Easy Creation Of Rating Inputs In Shiny","text":"Optimized Bootstrap 5 Possibility use fontawesome 6.1.2 icons well user-defined SVG images Simple definition number, size (height width), type, margin (left right), color animation icons Possibility add tooltips Read , hover accumulation modes Possibility define individual setting rules icons Compatible server validation inputs based shinyvalidate package","code":""},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easy Creation Of Rating Inputs In Shiny","text":"can install development version ShinyRating GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mhanf/ShinyRating\")"},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Easy Creation Of Rating Inputs In Shiny","text":"ShinyRating exports two main functions: ratingInput() updateRatingInput(). Shiny app example using functions can created follows: can run gallery : live version available : http://…","code":"# libraries library(shiny) library(ShinyRating) library(bslib) # ui part ui <- function(){   fluidPage(     theme = bslib::bs_theme(       version = 5,       bootswatch = \"flatly\"     ),     br(),     fluidRow(       column(         width = 12,         align = \"center\",         br(),         ratingInput(           inputId = \"mood\",           label = \"How do you feel ?\",           number = 5,           value = NA,           cumul = FALSE,           hover = TRUE,           i_on_color = c(\"danger\",\"warning\",\"dark\",\"info\",\"success\"),           i_off_color = \"light\",           i_name = c(\"face-angry\",\"face-frown\",\"face-meh\",\"face-smile\",\"face-laugh\"),           i_lib = \"fontawesome\",           i_anim = \"pulse\",           i_duration = 1,           tlp = TRUE,           tlp_color = c(\"danger\",\"warning\",\"dark\",\"info\",\"success\"),           tlp_position = \"bottom\",           i_value = c(\"Angry\",\"Frown\",\"Neutral\",\"Happy\",\"Excited\")         ),         br(),         ratingInput(           inputId = \"star\",           label = \"Where is shinyRating on the fun scale ?\",           i_anim = \"tada\",           i_width = \"2em\",           i_name = \"star\",           i_lib = \"fontawesome\",           i_on_color = \"#D5AB55\",           cumul = TRUE,           hover = TRUE         ),         br(),         ratingInput(           inputId = \"animal\",           label = \"What is your favorite animal ?\",           i_width = \"2.5em\",           i_name = c(\"cow\",\"hippo\",\"otter\",\"cat\",\"dog\"),           i_anim = \"heartBeat\",           i_margin_left = \"0.5em\",           i_margin_right = \"0.5em\",           i_off_color = \"black\",           tlp = TRUE,           tlp_color = \"white\",           i_value = c(\"Cow\",\"Hippo\",\"Otter\",\"Cat\",\"Dog\")         ),         br(),         actionButton(\"go\",\"Reset\",class=\"btn-success m-1\"),         actionButton(\"update\",\"Update\",class=\"btn-success m-1\"),         br(),         textOutput(\"rating1\"),         textOutput(\"rating2\"),         textOutput(\"rating3\")       )     )   ) } # Server part server <- function(input, output, session) {   observeEvent(      input$go , {       updateRatingInput(session, \"star\")       updateRatingInput(session, \"mood\")       updateRatingInput(session, \"animal\")     }   )   observeEvent(      input$update , {       updateRatingInput(session, \"star\",value = 5)       updateRatingInput(session, \"mood\", value = \"Excited\")       updateRatingInput(session, \"animal\", value = \"Cat\")     }   )   observe({     output$rating1 <- renderText(paste0(\"response mood: \",input$mood))     output$rating2 <- renderText(paste0(\"response star: \",input$star))     output$rating3 <- renderText(paste0(\"response animal: \",input$animal))     }) } # launch the app shinyApp(ui = ui, server = server) ShinyRating::run_gallery()"},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"prior-art--philosophy","dir":"","previous_headings":"","what":"Prior art & philosophy","title":"Easy Creation Of Rating Inputs In Shiny","text":"core functionnalities package similar ShinyRatingInput. package tries overcome limitations compatible shinyverse packages developed Rstudio (mostly shinyvalidate, bslib fontawesome) well extending functionnalities (color, size, animation …). tooltip functionality inspired one bsutils package. SVG loading functionnalities strongly inspired ones icons package.idea use animate.css comes shinyanimate package.","code":""},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Easy Creation Of Rating Inputs In Shiny","text":"developer maintainer mhanf. External contributions welcome. Please keep mind professional R developer enthusiastic R data scientist plays shiny javascript pretext learn new stuffs. Unfortunately, code. Please note ShinyRating project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://mhanf.github.io/ShinyRating/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Easy Creation Of Rating Inputs In Shiny","text":"ShinyRating package whole licensed GPLv3 license.animate.css library used package licensed HL3 license.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/addTooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a tooltip to a shiny.tag — addTooltip","title":"Add a tooltip to a shiny.tag — addTooltip","text":"Add tooltip shiny.tag.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/addTooltip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a tooltip to a shiny.tag — addTooltip","text":"","code":"addTooltip(el, tlp_color = \"black\", tlp_msg, tlp_position = \"top\")"},{"path":"https://mhanf.github.io/ShinyRating/reference/addTooltip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a tooltip to a shiny.tag — addTooltip","text":"el shiny.tag object tlp_color tooltip color, \"primary\", \"secondary\", \"light\", \"dark\", \"info\", \"warning\", \"danger\", \"success\", \"white\", \"black\". tlp_msg character string shown message. tlp_position tooltip position, \"top\", \"right\", \"bottom\", \"left\".","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/addTooltip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a tooltip to a shiny.tag — addTooltip","text":"shiny.tag object tooltip.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/createIcon.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an icon — createIcon","title":"Create an icon — createIcon","text":"Create icon usage createRating.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/createIcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an icon — createIcon","text":"","code":"createIcon(   id,   number = 10,   rating_id,   cumul = FALSE,   tlp = FALSE,   read_only = FALSE,   hover = FALSE,   i_name = \"star\",   i_lib = \"fontawesome\",   i_number = 1,   i_on_color = \"primary\",   i_off_color = \"dark\",   init_color = \"dark\",   i_width = NULL,   i_height = NULL,   i_anim = \"none\",   i_duration = 2,   i_value = 1,   i_margin_left = \"auto\",   i_margin_right = \"auto\",   tlp_position = \"top\",   tlp_color = \"black\" )"},{"path":"https://mhanf.github.io/ShinyRating/reference/createIcon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an icon — createIcon","text":"id icon id. number total number icons rating input. rating_id rating input id. cumul Logical, whether use cumulative color icon. tlp Logical, whether use tooltip icon. read_only Logical, whether use read mode icon. hover Logical, whether use hover mode icon. i_name icon name (fontawesome) path (local). i_lib icon library use. Either \"fontawesome\" \"local\". i_number icon place rating input. i_on_color icon color selected (hex Bootstrap 5 color). i_off_color icon color deselected (hex Bootstrap 5 color). init_color icon initial color (hex Bootstrap 5 color). i_width icon width css units. i_height icon height css units. i_anim type animation see Animate.css. i_duration animation duration seconds. i_value character string shown message. i_margin_left, i_margin_right length value margin either left right icon. default, \"auto\" used properties. space needed either side length \"0.2em\" recommended starting point. tlp_position tooltip position, \"top\", \"right\", \"bottom\", \"left\". tlp_color tooltip color, \"primary\", \"secondary\", \"light\", \"dark\", \"info\", \"warning\", \"danger\", \"success\", \"white\", \"black\".","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/createIcon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an icon — createIcon","text":"shiny.tag object usage createRating","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/createRating.html","id":null,"dir":"Reference","previous_headings":"","what":"Create rating icons — createRating","title":"Create rating icons — createRating","text":"Create rating icons usage ratingInput.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/createRating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create rating icons — createRating","text":"","code":"createRating(   rating_id,   i_name = \"star\",   i_lib = \"fontawesome\",   number = 10,   init_value = 0,   i_on_color = \"primary\",   i_off_color = \"dark\",   i_width = NULL,   i_height = NULL,   i_anim = \"none\",   i_duration = 2,   cumul = FALSE,   tlp = FALSE,   i_value = 1:number,   i_margin_left = \"auto\",   i_margin_right = \"auto\",   tlp_position = \"top\",   tlp_color = \"black\",   read_only = FALSE,   hover = FALSE )"},{"path":"https://mhanf.github.io/ShinyRating/reference/createRating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create rating icons — createRating","text":"rating_id rating input id. i_name icon name (fontawesome) path (local). i_lib icon library use. Either \"fontawesome\" \"local\". number number icons rating input. init_value Initial value rating input. i_on_color icon colors selected (hex Bootstrap 5 color). i_off_color icon colors deselected (hex Bootstrap 5 color). i_width icons width css units. i_height icons height css units. i_anim type animations see Animate.css. i_duration animation duration seconds. cumul Logical, whether use cumulative color icons. tlp Logical, whether use tooltip icon. i_value character strings shown message. i_margin_left, i_margin_right length value margin either left right icon. default, \"auto\" used properties. space needed either side length \"0.2em\" recommended starting point. tlp_position tooltip positions, \"top\", \"right\", \"bottom\", \"left\". tlp_color tooltip colors, \"primary\", \"secondary\", \"light\", \"dark\", \"info\", \"warning\", \"danger\", \"success\", \"white\", \"black\". read_only Logical, whether use read mode icons. hover Logical, whether use hover mode icons.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/createRating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create rating icons — createRating","text":"shiny.tag object usage ratingInput","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/dot-onLoad.html","id":null,"dir":"Reference","previous_headings":"","what":"Load package dependencies — .onLoad","title":"Load package dependencies — .onLoad","text":"Load package dependencies","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/dot-onLoad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load package dependencies — .onLoad","text":"","code":".onLoad(libname, pkgname)"},{"path":"https://mhanf.github.io/ShinyRating/reference/dot-onLoad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load package dependencies — .onLoad","text":"libname libname pkgname pkgname","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/dot-onLoad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load package dependencies — .onLoad","text":"Load package dependencies","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/isHex.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if a text is a hex color — isHex","title":"Test if a text is a hex color — isHex","text":"Test text hex color","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/isHex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if a text is a hex color — isHex","text":"","code":"isHex(x)"},{"path":"https://mhanf.github.io/ShinyRating/reference/isHex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if a text is a hex color — isHex","text":"x text","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/isHex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if a text is a hex color — isHex","text":"logical,TRUE FALSE","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a rating input — ratingInput","title":"Create a rating input — ratingInput","text":"Create rating input usage Shiny UI.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a rating input — ratingInput","text":"","code":"ratingInput(   inputId,   label = NULL,   width = \"auto\",   number = 5,   value = NA,   cumul = FALSE,   read_only = FALSE,   hover = FALSE,   i_on_color = \"success\",   i_off_color = \"dark\",   i_width = NULL,   i_height = NULL,   i_name = \"star\",   i_lib = \"fontawesome\",   i_anim = \"none\",   i_duration = 2,   i_value = 1:number,   i_margin_left = \"auto\",   i_margin_right = \"auto\",   tlp = FALSE,   tlp_position = \"bottom\",   tlp_color = \"black\" )"},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a rating input — ratingInput","text":"inputId rating input id. label Display label control. width width input, e.g. '400px', '100%'; see validateCssUnit() number number icons rating input. value Initial value. cumul Logical, whether use cumulative color icons. read_only Logical, whether use read mode icons. hover Logical, whether use hover mode icons. i_on_color, i_off_color icon colors (hex Bootstrap 5 color). i_width, i_height icons width height css units. i_name icon name (fontawesome) path (local). i_lib icon library use. Either \"fontawesome\" \"local\". i_anim type animations see Animate.css. i_duration animation duration seconds. i_value character strings shown message. i_margin_left, i_margin_right length value margin either left right icon. default, \"auto\" used properties. space needed either side length \"0.2em\" recommended starting point. tlp Logical, whether use tooltip icon. tlp_position tooltip positions, \"top\", \"right\", \"bottom\", \"left\". tlp_color tooltip colors, \"primary\", \"secondary\", \"light\", \"dark\", \"info\", \"warning\", \"danger\", \"success\", \"white\", \"black\".","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a rating input — ratingInput","text":"rating input usage Shiny UI.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/ratingInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a rating input — ratingInput","text":"","code":"if (interactive()) {   library(shiny)   library(bslib)   library(ShinyRating)    ui <- fluidPage(     theme = bslib::bs_theme(version = 5, bootwatch = \"flatly\"),     ratingInput(       inputId = \"id1\",       i_name = \"star\",       i_on_color = \"danger\"     ),     shiny::actionButton(\"update\", \"Update\")   )   server <- function(input, output, session) {     shiny::observeEvent(input$update, {       updateRatingInput(session = session, inputId = \"id1\", value = 4)     })   }   shiny::shinyApp(ui, server) }"},{"path":"https://mhanf.github.io/ShinyRating/reference/read_icon.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an svg file — read_icon","title":"Load an svg file — read_icon","text":"Load svg file","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/read_icon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an svg file — read_icon","text":"","code":"read_icon(   i_name,   i_width = \"2em\",   i_height = NULL,   i_margin_left = \"auto\",   i_margin_right = \"auto\" )"},{"path":"https://mhanf.github.io/ShinyRating/reference/read_icon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an svg file — read_icon","text":"i_name svg path i_width svg width i_height svg height i_margin_left, i_margin_right length value margin either left right icon. default, \"auto\" used properties. space needed either side length \"0.2em\" recommended starting point.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/read_icon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an svg file — read_icon","text":"svg tag","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/run_gallery.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app: shinyRating capabilities — run_gallery","title":"Shiny app: shinyRating capabilities — run_gallery","text":"Shiny app demonstrating rating input capabilities.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/run_gallery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app: shinyRating capabilities — run_gallery","text":"","code":"run_gallery()"},{"path":"https://mhanf.github.io/ShinyRating/reference/run_gallery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app: shinyRating capabilities — run_gallery","text":"returned value, function just runs Shiny app.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if a vector has a length == 1 or equal to a given number — test_length","title":"Test if a vector has a length == 1 or equal to a given number — test_length","text":"Test vector length == 1 equal given number","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if a vector has a length == 1 or equal to a given number — test_length","text":"","code":"test_length(x, number)"},{"path":"https://mhanf.github.io/ShinyRating/reference/test_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if a vector has a length == 1 or equal to a given number — test_length","text":"x Vector values number Desired number values","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if a vector has a length == 1 or equal to a given number — test_length","text":"error vector length != 1 different given number","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_logical.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if values in a vector are logical — test_logical","title":"Test if values in a vector are logical — test_logical","text":"Test values vector logical","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_logical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if values in a vector are logical — test_logical","text":"","code":"test_logical(x)"},{"path":"https://mhanf.github.io/ShinyRating/reference/test_logical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if values in a vector are logical — test_logical","text":"x Vector values","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_logical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if values in a vector are logical — test_logical","text":"error least one value logical","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_pos_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if values in a vector are positive integers — test_pos_integer","title":"Test if values in a vector are positive integers — test_pos_integer","text":"Test values vector positive integers","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_pos_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if values in a vector are positive integers — test_pos_integer","text":"","code":"test_pos_integer(x, na_rm = FALSE)"},{"path":"https://mhanf.github.io/ShinyRating/reference/test_pos_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if values in a vector are positive integers — test_pos_integer","text":"x Vector values na_rm Logical, NA removed ?","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/test_pos_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if values in a vector are positive integers — test_pos_integer","text":"error least one value integer","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the value of a rating input on the client — updateRatingInput","title":"Change the value of a rating input on the client — updateRatingInput","text":"Change value rating input client","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the value of a rating input on the client — updateRatingInput","text":"","code":"updateRatingInput(session, inputId, value = NA)"},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the value of a rating input on the client — updateRatingInput","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input. value new value assign input.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change the value of a rating input on the client — updateRatingInput","text":"input updated value.","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/updateRatingInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the value of a rating input on the client — updateRatingInput","text":"","code":"if (interactive()) {   library(shiny)   library(bslib)   library(ShinyRating)    ui <- fluidPage(     theme = bslib::bs_theme(version = 5, bootwatch = \"flatly\"),     ratingInput(       inputId = \"id1\",       i_name = \"star\",       i_on_color = \"danger\"     ),     shiny::actionButton(\"update\", \"Update\")   )   server <- function(input, output, session) {     shiny::observeEvent(input$update, {       updateRatingInput(session = session, inputId = \"id1\", value = 4)     })   }   shiny::shinyApp(ui, server) }"},{"path":"https://mhanf.github.io/ShinyRating/reference/xml2tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform xml into tags — xml2tags","title":"Transform xml into tags — xml2tags","text":"Transform xml tags","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/xml2tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform xml into tags — xml2tags","text":"","code":"xml2tags(x)"},{"path":"https://mhanf.github.io/ShinyRating/reference/xml2tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform xml into tags — xml2tags","text":"x xml","code":""},{"path":"https://mhanf.github.io/ShinyRating/reference/xml2tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform xml into tags — xml2tags","text":"xml tags","code":""},{"path":"https://mhanf.github.io/ShinyRating/news/index.html","id":"shinyrating-001","dir":"Changelog","previous_headings":"","what":"ShinyRating 0.0.1","title":"ShinyRating 0.0.1","text":"Initial release.","code":""}]
